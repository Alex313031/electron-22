is_electron_build = true
root_extra_deps = [ "//electron" ]

# Registry of NMVs --> https://github.com/nodejs/node/blob/master/doc/abi_version_registry.json
node_module_version = 110

v8_promise_internal_field_count = 1
v8_embedder_string = "-electron.0"

# TODO: this breaks mksnapshot
v8_enable_snapshot_native_code_counters = false

# TODO(codebytere): remove when Node.js handles https://chromium-review.googlesource.com/c/v8/v8/+/3211575
v8_scriptormodule_legacy_lifetime = true

# we use this api
v8_enable_javascript_promise_hooks = true

enable_cdm_host_verification = false
proprietary_codecs = true
ffmpeg_branding = "Chrome"

enable_basic_printing = true

# Removes DLLs from the build, which are only meant to be used for Chromium development.
# See https://github.com/electron/electron/pull/17985
angle_enable_vulkan_validation_layers = false
dawn_enable_vulkan_validation_layers = false

# These are disabled because they cause the zip manifest to differ between
# testing and release builds.
# See https://chromium-review.googlesource.com/c/chromium/src/+/2774898.
enable_pseudolocales = false

# Make application name configurable at runtime for cookie crypto
allow_runtime_configurable_key_storage = true

# CET shadow stack is incompatible with v8, until v8 is CET compliant
# enabling this flag causes main process crashes where CET is enabled
# Ref: https://source.chromium.org/chromium/chromium/src/+/45fba672185aae233e75d6ddc81ea1e0b30db050:v8/BUILD.gn;l=357
enable_cet_shadow_stack = false

# For similar reasons, disable CFI, which is not well supported in V8.
# Chromium doesn't have any problems with this because they do not run
# V8 in the browser process.
# Ref: https://source.chromium.org/chromium/chromium/src/+/45fba672185aae233e75d6ddc81ea1e0b30db050:v8/BUILD.gn;l=281
is_cfi = false

# TODO: fix this once sysroots have been updated.
use_qt = false

v8_builtins_profiling_log_file = ""

is_component_build = false
is_official_build = true

# This may be guarded behind is_chrome_branded alongside
# proprietary_codecs https://webrtc-review.googlesource.com/c/src/+/36321,
# explicitly override here to build OpenH264 encoder/FFmpeg decoder.
# The initialization of the decoder depends on whether ffmpeg has
# been built with H.264 support.
rtc_use_h264 = true

# By default, Electron builds ffmpeg with proprietary codecs enabled. In order
# to facilitate users who don't want to ship proprietary codecs in ffmpeg, or
# who have an LGPL requirement to ship ffmpeg as a dynamically linked library,
# we build ffmpeg as a shared library.
is_component_ffmpeg = true

# Added by Alex313031
is_debug = false
enable_stripping = true
dcheck_always_on = false
exclude_unwind_tables = true
enable_iterator_debugging = false
disable_fieldtrial_testing_config = true
enable_reporting = false
enable_profiling = false
symbol_level = 0
enable_nacl = false
optimize_webui = true
enable_webui_tab_strip = true
treat_warnings_as_errors = false
v8_symbol_level = 0
v8_enable_fast_torque = true
use_v8_context_snapshot = true
blink_symbol_level = 0
enable_precompiled_headers = false
enable_hls_sample_aes = true
enable_hls_demuxer = true
clang_use_chrome_plugins = true
enable_ffmpeg_video_decoders = true
rtc_include_ilbc = true
rtc_build_examples = false
enable_vr = true
use_vr_assets_component = true
enable_platform_hevc = true
enable_hevc_parser_and_hw_decoder = true
enable_platform_ac3_eac3_audio = true
enable_platform_dolby_vision = true
enable_platform_encrypted_dolby_vision = true
enable_platform_mpeg_h_audio = true
enable_platform_dts_audio = true
enable_mse_mpeg2ts_stream_parser = true
use_text_section_splitting = true
use_thin_lto = true
thin_lto_enable_optimizations = true
chrome_pgo_phase = 2
