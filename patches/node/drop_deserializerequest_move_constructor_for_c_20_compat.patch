From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jeremy Rose <japthorp@slack-corp.com>
Date: Mon, 26 Sep 2022 14:44:57 -0700
Subject: drop DeserializeRequest move constructor for c++20 compat

C++20 was enabled on mac in
https://chromium-review.googlesource.com/c/chromium/src/+/3914624, which caused
initialization of DeserializeRequest to fail:

../../third_party/electron_node/src/env.cc:1835:22: error: no matching constructor for initialization of 'DeserializeRequest'
  DeserializeRequest request{cb, {isolate(), holder}, index};
                     ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../third_party/electron_node/src/env.h:944:3: note: candidate constructor not viable: requires single argument 'other', but 3 arguments were provided
  DeserializeRequest(DeserializeRequest&& other) = default;
  ^
../../third_party/electron_node/src/env.h:937:8: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided
struct DeserializeRequest {
       ^

I think (though not 100% sure) that this is because the one explicitly
specified move constructor "shadows" the implicit initializer-list constructor.
This patch seems to fix things, in any case.

diff --git a/src/env.h b/src/env.h
index 6b18b6efd231d986c391a16966fdbc82a5d99eda..099d8c9efeeda1c851d526e4bf4ddece444c7299 100644
--- a/src/env.h
+++ b/src/env.h
@@ -939,9 +939,6 @@ struct DeserializeRequest {
   v8::Global<v8::Object> holder;
   int index;
   InternalFieldInfo* info = nullptr;  // Owned by the request
-
-  // Move constructor
-  DeserializeRequest(DeserializeRequest&& other) = default;
 };
 
 struct EnvSerializeInfo {
